{"version":3,"sources":["utils/api.js","components/MovieItem.jsx","components/MovieTabs.jsx","components/MoviesListWillWatch.jsx","components/Pagination.jsx","components/App.jsx","index.js"],"names":["API_URL","API_KEY_3","MovieItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setMovieImage","backdrop_path","poster_path","concat","state","moviesWillWatch","_this2","_this$props","movie","removeMovie","toggleWillWatch","react_default","a","createElement","className","src","alt","title","vote_average","type","onClick","bind","indexOf","setState","activeWillWatchBtn","React","Component","MovieTabs","sort_by","updateSortBy","handleClick","value","getClassLink","classNames","active","MoviesListWillWatch","moviesList","length","map","e","removeWillWatch","key","Pagination","updatePreviousPage","updateNextPage","currentPage","totalPages","aria-label","aria-hidden","App","getMovies","fetch","page","then","response","json","data","movies","results","total_pages","removeFilm","updateMovies","filter","item","id","updateMoviesWillWatch","updateMoviesListWillWatch","moviesListWillWatch","push","splice","target","classList","contains","prevProps","prevState","components_MovieTabs","MovieItem_MovieItem","components_Pagination","components_MoviesListWillWatch","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.707f5026.chunk.js","sourcesContent":["export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";","import React from 'react';\r\n\r\nexport default class MovieItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      moviesWillWatch: this.props.moviesWillWatch\r\n    }\r\n  }\r\n\r\n  setMovieImage = (backdrop_path, poster_path) => {\r\n    if(!(backdrop_path && poster_path)) {\r\n      return 'https://bitsofco.de/content/images/2018/12/Screenshot-2018-12-16-at-21.06.29.png'\r\n    } else {\r\n      return `https://image.tmdb.org/t/p/w500${backdrop_path || poster_path}`\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { movie, removeMovie, toggleWillWatch} = this.props,\r\n          willWatchClass = 'btn btn-secondary btn-sm',\r\n          removeWatchClass = 'btn btn-success btn-sm';\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <img \r\n          className=\"card-img-top md-4\"\r\n          src={this.setMovieImage(movie.backdrop_path, movie.poster_path)}\r\n          alt=\"\"/>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\" title={movie.title}>{movie.title}</h5>\r\n          <p className=\"mb-4\">Rating: {movie.vote_average}</p>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <button \r\n              className=\"btn btn-danger btn-sm\"\r\n              type=\"button\"\r\n              onClick={removeMovie.bind(null, movie)}\r\n            >\r\n              Remove film\r\n            </button>\r\n            <button \r\n              type=\"button\"\r\n              className={(this.state.moviesWillWatch.indexOf(movie.title) !== -1) ? removeWatchClass : willWatchClass}\r\n              onClick={() => {\r\n                this.setState({\r\n                  activeWillWatchBtn: !this.state.activeWillWatchBtn\r\n                });\r\n                toggleWillWatch(movie);\r\n              }}\r\n            >\r\n              {(this.state.moviesWillWatch.indexOf(movie.title) !== -1) ? 'Not Watch' : 'Will Watch'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst MovieTabs = (props) => {\r\n  const { sort_by, updateSortBy } = props;\r\n\r\n  const handleClick = value => {\r\n    return () => {\r\n      updateSortBy(value)\r\n    }\r\n  }\r\n\r\n  const getClassLink = value => {\r\n    // return `nav-link ${sort_by === value ? 'active' : ''}`\r\n    return classNames('nav-link', 'btn',{'active': sort_by === value})\r\n  }\r\n\r\n  return (\r\n    <ul className=\"nav nav-pills flex-column flex-sm-row\">\r\n      <li className=\"nav-item\">\r\n        <span \r\n          className={getClassLink(\"popularity.desc\")}\r\n          onClick={handleClick(\"popularity.desc\")}\r\n        >\r\n          Popularity\r\n        </span>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <span\r\n          className={getClassLink(\"revenue.desc\")}\r\n          onClick={handleClick(\"revenue.desc\")}\r\n        >\r\n          Revenue\r\n        </span>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <span\r\n          className={getClassLink(\"vote_average.desc\")}\r\n          onClick={handleClick(\"vote_average.desc\")}\r\n        >\r\n          Vote average\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default MovieTabs;","import React from 'react';\r\n\r\nconst MoviesListWillWatch = (props) => {\r\n\r\n  return (\r\n    <div className=\"col-12 col-md-3 movies-list\">\r\n      <h4 className=\"aside-title h5 my-4 text-center text-md-left mt-md-2\">Will watch: {props.moviesList.length} {props.moviesList.length === 1 ? 'movie' : 'movies'}</h4>\r\n      <ul className=\"list-group\">\r\n        {props.moviesList.map((movie) => {\r\n          return (\r\n            <li \r\n              className=\"list-group-item\"\r\n              onClick={(e) => props.removeWillWatch(movie, e)}\r\n              key={movie}\r\n            >\r\n              <span className=\"movie-title\" title={movie}>{movie}</span>\r\n              <span className=\"remove-movie-will-watch\">&times;</span>\r\n            </li>\r\n          )\r\n        })} \r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoviesListWillWatch;","import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n  const { updatePreviousPage, updateNextPage, currentPage, totalPages } = props;\r\n\r\n  return (\r\n    <nav aria-label=\"Page nanigation\">\r\n      <ul className=\"pagination mb-0 justify-content-center\">\r\n        <li \r\n          className=\"page-item\"\r\n          onClick={updatePreviousPage}\r\n        >\r\n          <span className=\"btn btn-info\" aria-label=\"Previous\">\r\n            <span aria-hidden=\"true\">Previous</span>\r\n          </span>\r\n        </li>\r\n        <li className=\"page-item\">\r\n          <span className=\"btn btn-light\">{currentPage} of {totalPages}</span>\r\n        </li>\r\n        <li \r\n          className=\"page-item\"\r\n          onClick={updateNextPage}\r\n        >\r\n          <span className=\"btn btn-info\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">Next</span>\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\nimport { API_URL, API_KEY_3} from \"../utils/api\";\nimport MovieItem from \"./MovieItem\";\nimport MovieTabs from \"./MovieTabs\";\nimport MovieListWillWatch from \"./MoviesListWillWatch\";\nimport Pagination from \"./Pagination\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      moviesWillWatch: [],\n      moviesListWillWatch: [],\n\n      sort_by: \"popularity.desc\",\n      page: 1,\n      total_pages: 0\n    }\n\n    // console.log('constructor');\n\n    // this.removeFilm = this.removeFilm.bind(this);\n  }\n\n  // removeFilm(movie) {\n  //   const updateMovies = this.state.movies.filter((item) => {\n  //     return item.id !== movie.id;\n  //   })\n    \n  //   this.setState({\n  //     movies: updateMovies\n  //   })\n  // }\n\n  componentDidMount() {\n    // console.log('did mount');\n    this.getMovies();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"didUpdate\");\n    // console.log(\"prev\", prevProps, prevState);\n    // console.log(\"current\", this.props, this.state);\n\n    if(prevState.sort_by !== this.state.sort_by || prevState.page !== this.state.page) {\n     this.getMovies();\n    }\n  }\n\n  getMovies = () => {\n    fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.page}`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          movies: data.results,\n          total_pages: data.total_pages\n        })\n      });\n  }\n\n  removeFilm = (movie) => {\n    const updateMovies = this.state.movies.filter((item) => {\n      return item.id !== movie.id;\n    })\n    this.setState({\n      movies: updateMovies\n    })\n  }\n\n  toggleWillWatch = (movie) => {\n    const updateMoviesWillWatch = this.state.moviesWillWatch,\n          updateMoviesListWillWatch = this.state.moviesListWillWatch;\n\n    if(updateMoviesWillWatch.indexOf(movie.id) === -1) {\n      updateMoviesWillWatch.push(movie.id);\n      updateMoviesListWillWatch.push(movie.title);\n    } else {\n      updateMoviesWillWatch.splice(updateMoviesWillWatch.indexOf(movie.id), 1);\n      updateMoviesListWillWatch.splice(updateMoviesListWillWatch.indexOf(movie.title), 1);\n    }\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch,\n      moviesListWillWatch: updateMoviesListWillWatch\n    });\n  };\n\n  removeWillWatch = (movie, e) => {\n    const updateMoviesWillWatch = this.state.moviesWillWatch,\n          updateMoviesListWillWatch = this.state.moviesListWillWatch;\n\n    if(e.target.classList.contains('remove-movie-will-watch')) {\n      updateMoviesWillWatch.splice(updateMoviesWillWatch.indexOf(movie), 1);\n      updateMoviesListWillWatch.splice(updateMoviesListWillWatch.indexOf(movie), 1);\n    }\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch,\n      moviesListWillWatch: updateMoviesListWillWatch\n    });\n  }\n\n  updateSortBy = (value) => {\n    this.setState({\n      sort_by: value\n    })\n  }\n\n  updatePreviousPage = () => {\n    if(this.state.page !== 1) {\n      this.setState({\n        page: this.state.page - 1\n      })\n    }\n  }\n\n  updateNextPage = () => {\n    if(this.state.page !== this.state.total_pages) {\n      this.setState({\n        page: this.state.page + 1\n      })\n    }\n    \n  }\n\n  render() {\n    // console.log('render');\n    // console.log(this.state);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h1 className=\"col-12 mb-4 text-center text-md-left app-title h3\">Movies app</h1>\n          <div className=\"col-12 col-md-9\">\n            <div className=\"row mb-3\">\n              <div className=\"col-12\">\n                <MovieTabs \n                  sort_by={this.state.sort_by}\n                  updateSortBy={this.updateSortBy}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              {this.state.movies.map((movie) => {\n                return (\n                  <div className=\"col-12 col-md-6 col-xl-4 mb-4\" key={movie.id}>\n                    <MovieItem \n                      movie={movie}\n                      removeMovie={this.removeFilm}\n                      toggleWillWatch={this.toggleWillWatch}\n                      moviesWillWatch={this.state.moviesListWillWatch}\n                    />\n                  </div>\n                )\n              })}\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <Pagination \n                  updatePreviousPage={this.updatePreviousPage}\n                  updateNextPage={this.updateNextPage}\n                  currentPage={this.state.page}\n                  totalPages={this.state.total_pages}\n                />\n              </div>\n            </div>\n          </div>\n          <MovieListWillWatch \n            moviesList={this.state.moviesListWillWatch}\n            removeWillWatch={this.removeWillWatch}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}